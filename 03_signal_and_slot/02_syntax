/* define */
#include <QObject>

class Counter : public QObject
{
Q_OBJECT                               //this is must add to enable moc building

public:
    Counter() { m_value = 0; }

    int value() const { return m_value; }

    public slots:
	void setValue(int value);

signals:
    void valueChanged(int newValue);

private:
    int m_value;
};

void Counter::setValue(int value)
{
 if (value != m_value) {
     m_value = value;
     emit valueChanged(value);
 }
}

/* usage  */
Counter a, b;
QObject::connect(&a, SIGNAL(valueChanged(int)),&b, SLOT(setValue(int)));
                   /*         the parameter in method is var type(not var)          */

a.setValue(12);     // a.value() == 12, b.value() == 12
b.setValue(48);     // a.value() == 12, b.value() == 48
